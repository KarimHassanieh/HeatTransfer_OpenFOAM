/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;
vertices
(
//Fluid
    (0 0 0) //0
    (1 0 0) //1
    (1 .5 0)//2
    (0 .5 0)//3

    (0 0 .4)//4
    (1 0 .4)//5
    (1 .5 .4)//6
    (0 .5 .4)//7

    (3 0 0)//8
    (3 .5 0)//9

    (3 0 .4)//10
    (3 .5 .4)//11

    (-.5 0 0)//12
    (-.5 .5 0)//13

    (-.5 .5 .4)//14
    (-.5 0 .4)//15
//Solid 
     
    (0 -.25 0)//16
    (1 -.25 0)//17
    (1 0 0)//18
    (0 0 0)//19

    (0 -.25 .4)//20
    (1 -.25 .4)//21
    (1 0 .4)//22
    (0 0 .4)//23


    
);

blocks
(
//fluids
    hex (12 0 3 13 15 4 7 14) (81 41 1) simpleGrading (.2 15 1)
    hex (0 1 2 3 4 5 6 7) (161 41 1) simpleGrading (5 15 1)
    hex (1 8 9 2 5 10 11 6) (51 41 1) simpleGrading (1 15 1)
//solid
    hex (16 17 18 19 20 21 22 23) (32 16 1) simpleGrading (1 1 1)
);

edges
(
);

boundary
(

    inlet
    {
        type wall;
        faces
        (
            (13 12 15 14)
        );
    }

    outlet
    {
        type wall;
        faces
        (
            (8 9 11 10)
        );
    }

    top
    {
        type wall;
        faces
        (
            (7 6 2 3)
            (9 2 6 11)
            (13 3 7 14)
        );
    }

    fluid_slip-bottom
    {
        type wall;
        faces
        (
            (15 12 0 4)
        );
    }

    fluid_no_slip-bottom
    {
        type wall;
        faces
        (
            (1 8 10 5)
        );
    }


    solid_bottom
    {
        type wall;
        faces
        (
            (20 16 17 21)
        );
}

solid_sides

    {
        type wall;
        faces
        (
            (17 18 22 21)
             (20 23 19 16)
        );
    }


    interface_fluid
    {
        type wall;
        faces
        (
            (4 0 1 5)
        );
    }

    

    interface_solid
    {
        type wall;
        faces
        (
            (23 22 18 19)
        );
    }

        front_back
    {
        type empty;
        faces
        (
        //fluid
            (0 1 2 3)
            (4 5 6 7)
            (1 2 8 9)
            (5 6 10 11)
            (0 3 12 13)
            (4 7 14 15)
      //solid
             (16 17 18 19)
             (20 21 22 23)
                   
            
            
        );
    }


);

mergePatchPairs
(
(interface_fluid interface_solid)
);



// ************************************************************************* //
